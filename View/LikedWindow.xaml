<Window x:Class="wpfHUSH.View.LikedWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:wpfHUSH.View"
        mc:Ignorable="d"
        Title="LikedWindow" WindowStyle="None" AllowsTransparency="True" Background="Transparent" Height="480" Width="860" MaxHeight="480" MaxWidth="860" MinWidth="860" MinHeight="480" WindowStartupLocation="CenterScreen" Icon="/Pictures/Logo.ico" RenderOptions.BitmapScalingMode="HighQuality">
    <Window.Resources>
        <ControlTemplate x:Key="CleanToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
            <Border Background="{TemplateBinding Background}"
     BorderBrush="{TemplateBinding BorderBrush}"
     BorderThickness="{TemplateBinding BorderThickness}"
     CornerRadius="0,18,18,0">
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#F0F0F0"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="UserButton" TargetType="Button">
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Width" Value="55"/>
            <Setter Property="Height" Value="55"/>
            <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality"/>
            <Setter Property="RenderOptions.EdgeMode" Value="Aliased"/>
            <Setter Property="Margin" Value="5,11,5,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border 
            x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="16">
                            <ContentPresenter 
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                TextBlock.FontFamily="{TemplateBinding FontFamily}"
                TextBlock.FontSize="{TemplateBinding FontSize}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FFCECECE"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="{x:Null}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#E0E0E0"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="{x:Null}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TextBlockText" TargetType="TextBlock">
            <Setter Property="Margin" Value="0,12,0,0"/>
            <Setter Property="FontFamily" Value="Arial Black"/>
            <Setter Property="FontSize" Value="15"/>
        </Style>
        <Style x:Key="TextNickname" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Arial Black"/>
            <Setter Property="Height" Value="12"/>
        </Style>
        <Style x:Key="RoundedButton" TargetType="Button">
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="2,0,2,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
    Background="{TemplateBinding Background}"
    BorderBrush="{TemplateBinding BorderBrush}"
    BorderThickness="{TemplateBinding BorderThickness}"
    CornerRadius="0"
    RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform x:Name="scaleTransform" ScaleX="1" ScaleY="1"/>
                            </Border.RenderTransform>
                            <ContentPresenter HorizontalAlignment="Center"
                 VerticalAlignment="Center"
                 TextBlock.FontFamily="{TemplateBinding FontFamily}"
                 TextBlock.FontSize="{TemplateBinding FontSize}"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <!-- Анимация при наведении -->
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border"
                            Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                            To="#F0F0F0"
                            Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="border"
                            Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                            To="1.02"
                            Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="border"
                            Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                            To="1.02"
                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <!-- Анимация при уходе курсора -->
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border"
                            Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                            To="#FFBBBBBB"
                            Duration="0:0:0.3"/>
                                        <DoubleAnimation Storyboard.TargetName="border"
                            Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                            To="1"
                            Duration="0:0:0.3"/>
                                        <DoubleAnimation Storyboard.TargetName="border"
                            Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                            To="1"
                            Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <!-- Эффект при нажатии -->
                            <Trigger Property="IsPressed" Value="True">

                                <Setter TargetName="border" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0.99" ScaleY="0.99"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LabelText" TargetType="Label">
            <Setter Property="FontFamily" Value="Arial Black"/>
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="Margin" Value="0,10,-8,0"/>
        </Style>
        <Style x:Key="TextLocation" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Arial Black"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Margin" Value="0,54,0,0"/>
        </Style>
        <Style x:Key="TextDescription" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Arial Black"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Margin" Value="6,0,0,0"/>
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="Width" Value="332"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
        <Style x:Key="LinkBlockText" TargetType="TextBlock">
            <Setter Property="Margin" Value="11,0,0,0"/>
            <Setter Property="FontFamily" Value="Arial Black"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Height" Value="Auto"/>
        </Style>
        <Style x:Key="Text" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Arial Black"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Margin" Value="0,180,160,8"/>
        </Style>

        <Style x:Key="ModernRoundedComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="36"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Margin" Value="3,0,0,7"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <!-- Основной контейнер -->
                            <Border x:Name="Border" 
                    CornerRadius="18" 
                    Background="{x:Null}" 
                    BorderBrush="Black" 
                    BorderThickness="1.5"
                    Padding="0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="32"/>
                                    </Grid.ColumnDefinitions>

                                    <!-- Контент и текстовое поле -->
                                    <Grid Margin="12,0,0,0">
                                        <ContentPresenter x:Name="ContentSite"
                                  Content="{TemplateBinding SelectionBoxItem}"
                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Left"/>

                                        <TextBox x:Name="PART_EditableTextBox"
                             Style="{x:Null}"
                             VerticalAlignment="Center"
                             Focusable="True"
                             Background="Transparent"
                             Visibility="Hidden"
                             IsReadOnly="{TemplateBinding IsReadOnly}"/>

                                        <TextBlock x:Name="PlaceholderText"
                               Text="Причина жалобы"
                               FontFamily="Arial Black"
                               FontSize="{TemplateBinding FontSize}"
                               Margin="0,0,0,0"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Left"
                               Foreground="LightGray"
                               Opacity="0"/>
                                    </Grid>

                                    <!-- Кнопка раскрытия -->
                                    <ToggleButton x:Name="ToggleButton"
                              Grid.Column="1"
                              Focusable="False"
                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                              ClickMode="Press" 
                              Background="{x:Null}" 
                              BorderBrush="Transparent"
                              Padding="0,0,8,0"
                              Template="{StaticResource CleanToggleButtonTemplate}">
                                        <Path x:Name="Arrow"
                          Fill="Black"
                          Data="M0,0 L4,4 8,0 Z"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                                      
                          RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <RotateTransform Angle="0"/>
                                            </Path.RenderTransform>
                                        </Path>
                                    </ToggleButton>
                                </Grid>
                            </Border>

                            <!-- Выпадающий список -->
                            <Popup x:Name="Popup"
                   Placement="Bottom"
                   Focusable="False"
                   AllowsTransparency="True"
                   IsOpen="{TemplateBinding IsDropDownOpen}"
                   PopupAnimation="Fade">
                                <Border x:Name="DropDownBorder"
                    CornerRadius="12"
                    Background="#FFFFFF"
                    BorderBrush="Black"
                    BorderThickness="2"
                    MinWidth="{TemplateBinding ActualWidth}"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                    Margin="0,4,0,0">
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="12" 
                                      ShadowDepth="0" 
                                      Color="#20000000" 
                                      Opacity="0.3"/>
                                    </Border.Effect>
                                    <ScrollViewer>
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <!-- Эффекты при наведении -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="Black"/>
                            </Trigger>

                            <!-- Эффекты при открытии -->
                            <Trigger Property="IsDropDownOpen" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="Black"/>
                                <Setter TargetName="Border" Property="CornerRadius" Value="18,18,0,0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,0,0,0"/>
                                <Setter TargetName="Arrow" Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="180"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>

                            <!-- Эффекты для disabled состояния -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="Black"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="Black"/>
                                <Setter Property="Foreground" Value="#AAAAAA"/>
                                <Setter TargetName="Arrow" Property="Fill" Value="#CCCCCC"/>
                            </Trigger>

                            <!-- Плейсхолдер для пустого значения -->
                            <Trigger Property="Text" Value="">
                                <Setter TargetName="PlaceholderText" Property="Opacity" Value="1"/>
                            </Trigger>

                            <Trigger Property="Text" Value="{x:Null}">
                                <Setter TargetName="PlaceholderText" Property="Opacity" Value="1"/>
                            </Trigger>

                            <!-- Анимации для плейсхолдера -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Border"
                               Storyboard.TargetProperty="BorderBrush.Opacity"
                               To="0.8" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Border"
                               Storyboard.TargetProperty="BorderBrush.Opacity"
                               To="0.5" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>

                            <!-- Плавное появление/исчезание плейсхолдера -->
                            <Trigger Property="Text" Value="">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="PlaceholderText"
                               Storyboard.TargetProperty="Opacity"
                               From="0" To="1" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="PlaceholderText"
                               Storyboard.TargetProperty="Opacity"
                               From="1" To="0" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <!-- Стиль для элементов в выпадающем списке -->
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ComboBoxItem}">
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                    <Border x:Name="ItemBorder" 
                            CornerRadius="6"
                            Background="Transparent" 
                            BorderThickness="0"
                            Padding="12,6,12,6"
                            Margin="4,2,4,2">
                                        <ContentPresenter />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="ItemBorder" Property="Background" Value="#F0F0F0"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="ItemBorder" Property="Background" Value="#E0E0E0"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="BigTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="Height" Value="62"/>
            <Setter Property="Width" Value="232"/>
            <Setter Property="Margin" Value="3,0,0,0"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border x:Name="border" 
             Background="{TemplateBinding Background}"
             BorderBrush="{TemplateBinding BorderBrush}"
             BorderThickness="{TemplateBinding BorderThickness}"
             CornerRadius="16"
             SnapsToDevicePixels="True">
                                <Grid Margin="{TemplateBinding Padding}">
                                    <!-- Watermark -->
                                    <TextBlock x:Name="watermark"
                        Text="{TemplateBinding Tag}"
                        Foreground="LightGray"
                        Opacity="1"
                        FontFamily="Arial Black"
                        VerticalAlignment="Top" 
                        Margin="5,3,5,0"
                        FontSize="12" 
                        FontWeight="Bold"/>

                                    <ScrollViewer x:Name="PART_ContentHost"/>
                                </Grid>
                            </Border>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <!-- Главный триггер - управляет видимостью watermark -->
                            <Trigger Property="Text" Value="">
                                <Setter TargetName="watermark" Property="Opacity" Value="1"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="watermark"
                                    Storyboard.TargetProperty="Opacity"
                                    From="0" To="1" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="watermark"
                                    Storyboard.TargetProperty="Opacity"
                                    From="1" To="0" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>

                            <!-- Дополнительный триггер для null значений -->
                            <Trigger Property="Text" Value="{x:Null}">
                                <Setter TargetName="watermark" Property="Opacity" Value="1"/>
                            </Trigger>

                            <!-- Триггер на наведение - скрывает watermark только если поле пустое -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="Text" Value=""/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="watermark" Property="Opacity" Value="0"/>
                            </MultiTrigger>

                            <!-- Стили для рамки -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#555555"/>
                                <Setter TargetName="watermark" Property="Opacity" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#555555"/>
                                <Setter TargetName="watermark" Property="Opacity" Value="0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ReportButton" TargetType="Button">
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="12"/>
            <Setter Property="FontFamily" Value="Arial Black"/>
            <Setter Property="Width" Value="55"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality"/>
            <Setter Property="RenderOptions.EdgeMode" Value="Aliased"/>
            <Setter Property="Margin" Value="0,8,5,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border 
    x:Name="border"
    Background="{TemplateBinding Background}"
    BorderBrush="{TemplateBinding BorderBrush}"
    BorderThickness="{TemplateBinding BorderThickness}"
    CornerRadius="16">
                            <ContentPresenter 
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        TextBlock.FontFamily="{TemplateBinding FontFamily}"
        TextBlock.FontSize="{TemplateBinding FontSize}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FFCECECE"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="{x:Null}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#E0E0E0"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="{x:Null}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="WindowButton" TargetType="Button">
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Background" Value="#FF2D2D30"/>
            <!-- Явно задаем начальный цвет -->
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                 BorderBrush="{TemplateBinding BorderBrush}"
                 BorderThickness="{TemplateBinding BorderThickness}"
                 CornerRadius="3"
                 RenderTransformOrigin="0.5,0.5">
                            <Border.Background>
                                <!-- Явно определяем SolidColorBrush -->
                                <SolidColorBrush Color="#FF2D2D30"/>
                            </Border.Background>
                            <Border.RenderTransform>
                                <ScaleTransform x:Name="scaleTransform" ScaleX="1" ScaleY="1"/>
                            </Border.RenderTransform>
                            <ContentPresenter HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              TextBlock.FontFamily="{TemplateBinding FontFamily}"
                              TextBlock.FontSize="{TemplateBinding FontSize}"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <!-- Анимация при наведении -->
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="#FF333337"
                                        Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                        To="1.01"
                                        Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                        To="1.01"
                                        Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <!-- Анимация при уходе курсора -->
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="#FF2D2D30"
                                        Duration="0:0:0.3"/>
                                        <DoubleAnimation Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                        To="1"
                                        Duration="0:0:0.3"/>
                                        <DoubleAnimation Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                        To="1"
                                        Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <!-- Эффект при нажатии -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0.99" ScaleY="0.99"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="WindowButtonClose" TargetType="Button">
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Background" Value="#FF2D2D30"/>
            <!-- Явно задаем начальный цвет -->
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
        BorderBrush="{TemplateBinding BorderBrush}"
        BorderThickness="{TemplateBinding BorderThickness}"
        CornerRadius="3,9,3,3"
        RenderTransformOrigin="0.5,0.5">
                            <Border.Background>
                                <!-- Явно определяем SolidColorBrush -->
                                <SolidColorBrush Color="#FF2D2D30"/>
                            </Border.Background>
                            <Border.RenderTransform>
                                <ScaleTransform x:Name="scaleTransform" ScaleX="1" ScaleY="1"/>
                            </Border.RenderTransform>
                            <ContentPresenter HorizontalAlignment="Center"
                     VerticalAlignment="Center"
                     TextBlock.FontFamily="{TemplateBinding FontFamily}"
                     TextBlock.FontSize="{TemplateBinding FontSize}"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <!-- Анимация при наведении -->
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border"
                               Storyboard.TargetProperty="Background.Color"
                               To="#FF333337"
                               Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="border"
                               Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                               To="1.01"
                               Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="border"
                               Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                               To="1.01"
                               Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <!-- Анимация при уходе курсора -->
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border"
                               Storyboard.TargetProperty="Background.Color"
                               To="#FF2D2D30"
                               Duration="0:0:0.3"/>
                                        <DoubleAnimation Storyboard.TargetName="border"
                               Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                               To="1"
                               Duration="0:0:0.3"/>
                                        <DoubleAnimation Storyboard.TargetName="border"
                               Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                               To="1"
                               Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <!-- Эффект при нажатии -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0.99" ScaleY="0.99"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Border CornerRadius="10" Background="White" ClipToBounds="True">
        <Grid>
            <DockPanel>
                <Border DockPanel.Dock="Top" Height="30" RenderOptions.BitmapScalingMode="HighQuality" CornerRadius="8,8,0,0" Background="#FF2D2D30" MouseLeftButtonDown="TitleBar_MouseLeftButtonDown">
                    <Grid>
                        <TextBlock Text="" 
    VerticalAlignment="Center" 
    HorizontalAlignment="Center"
    Margin="10,0,0,0"
    Foreground="White"/>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                            <Button Content="_" Style="{StaticResource WindowButton}" Width="40" Background="Transparent" 
     Foreground="White" BorderThickness="0" Click="MinimizeButton_Click"/>
                            <Button Content="X" Width="40" Background="Transparent" 
     Foreground="White" BorderThickness="0" Click="CloseButton_Click" Style="{StaticResource WindowButtonClose}"
     />
                        </StackPanel>
                    </Grid>
                </Border>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="10*"/>
                    </Grid.RowDefinitions>

                    <StackPanel Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Left">
                        <Image Source="/Pictures/Group 18.png" Height="37" Width="180" RenderOptions.BitmapScalingMode="HighQuality" 
RenderOptions.EdgeMode="Aliased" Margin="0,7,0,0"/>
                    </StackPanel>

                    <StackPanel Grid.Row="0" Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right">
                        <Image Source="{Binding User.Photo}" Stretch="UniformToFill" Width="34" Height="34" Margin="0,2,5,0">
                            <Image.Clip>
                                <RectangleGeometry Rect="0,0,32,32" RadiusX="12" RadiusY="12"/>
                            </Image.Clip>
                        </Image>
                        <TextBlock Text="{Binding User.Name}" Style="{StaticResource TextNickname}"/>
                        <Button BorderBrush="{x:Null}" Width="16" Height="16" Style="{StaticResource RoundedButton}" Command="{Binding OpenEditWindow}" Margin="2,0,9,0">
                            <Button.Background>
                                <ImageBrush ImageSource="/Pictures/ic_baseline-create.png" RenderOptions.BitmapScalingMode="HighQuality" 
RenderOptions.EdgeMode="Aliased"/>
                            </Button.Background>
                        </Button>
                    </StackPanel>

                    <StackPanel Grid.Row="1" Grid.Column="0">
                        <Image Source="{Binding Swiper.Swiper.Photo}" Stretch="UniformToFill" Height="367" Width="367" Margin="40,15,15,0">
                            <Image.Clip>
                                <RectangleGeometry Rect="0,0,367,367" RadiusX="14" RadiusY="14"/>
                            </Image.Clip>
                        </Image>
                    </StackPanel>

                    <StackPanel Grid.Row="1" Grid.Column="1">
                        <StackPanel Orientation="Horizontal">
                            <Label Content="{Binding Swiper.Swiper.Name}" Style="{StaticResource LabelText}"/>
                            <Label Content="," Style="{StaticResource LabelText}" Margin="0,7,-6,0"/>
                            <Label Content="{Binding Swiper.Swiper.Age}" Style="{StaticResource LabelText}"/>
                            <Image Source="{Binding Swiper.Swiper.GenderIcon}" RenderOptions.BitmapScalingMode="HighQuality" Height="26" Width="29" Margin="4,4,0,0"/>
                        </StackPanel>
                    </StackPanel>

                    <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top">
                        <Button Width="24" Style="{StaticResource RoundedButton}" Height="24" Margin="4,18,10,0" Command="{Binding CloseWindow}">
                            <Button.Background>
                                <ImageBrush ImageSource="/Pictures/Back.png" RenderOptions.BitmapScalingMode="HighQuality" 
RenderOptions.EdgeMode="Aliased" />
                            </Button.Background>
                        </Button>
                    </StackPanel>

                    <StackPanel Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left">
                        <!-- Основной контент (город и описание) -->
                        <StackPanel Orientation="Horizontal" Margin="0,8,0,0" Width="392">
                            <Image Source="/Pictures/Loci.png" RenderOptions.BitmapScalingMode="HighQuality" 
               RenderOptions.EdgeMode="Aliased" Height="25" Width="19" Margin="3,49,5,0"/>
                            <TextBlock Text="{Binding Swiper.Swiper.City}" Height="27" Style="{StaticResource TextLocation}" Margin="0,49,0,0"/>
                        </StackPanel>
                        <TextBlock Text="{Binding Swiper.Swiper.About}" Style="{StaticResource TextDescription}" Margin="6,6,0,0" HorizontalAlignment="Left" Foreground="#FF373737"/>

                        <!-- Слой с кнопками пользователя (видимость управляется UserButtonsVisible) -->
                        <StackPanel Orientation="Horizontal" Visibility="{Binding UserButtonsVisible}">
                            <Button Style="{StaticResource UserButton}" Command="{Binding LinkVisible}">
                                <Button.Background>
                                    <ImageBrush ImageSource="/Pictures/Like.png"/>
                                </Button.Background>
                            </Button>
                            <Button Style="{StaticResource UserButton}" Command="{Binding Dislike}">
                                <Button.Background>
                                    <ImageBrush ImageSource="/Pictures/Dislike.png"/>
                                </Button.Background>
                            </Button>
                            <Button Style="{StaticResource UserButton}" Command="{Binding ReportVisible}">
                                <Button.Background>
                                    <ImageBrush ImageSource="/Pictures/Report.png"/>
                                </Button.Background>
                            </Button>
                        </StackPanel>

                        <!-- Слой с ссылками (видимость управляется LinksButtonsVisible) -->
                        <StackPanel Visibility="{Binding LinksButtonsVisible}" Margin="0,5,0,0" >
                            <StackPanel Orientation="Horizontal" Margin="10,0,0,0" Height="38">
                                <Image Source="/Pictures/Vector2333.png" Height="33" Width="41" />
                                <Image Source="/Pictures/@.png" Height="19" Width="22" Margin="7,0,0,0" />
                                <TextBlock Text="{Binding Swiper.Swiper.Contact.VK}" Style="{StaticResource LinkBlockText}" Margin="4,7,0,0"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10,10,0,0">
                                <Image Source="/Pictures/VectorTG.png" Height="38" Width="41" />
                                <Image Source="/Pictures/@.png" Height="19" Width="22" Margin="7,0,0,0" />
                                <TextBlock Text="{Binding Swiper.Swiper.Contact.Telegram}" Style="{StaticResource LinkBlockText}" Margin="4,7,0,0"/>
                            </StackPanel>
                        </StackPanel>

                        <!-- Слой с жалобой (изначально скрыт) -->
                        <StackPanel Visibility="Hidden" Margin="0,-69,0,0" >
                            <TextBlock Text="Жалоба" Style="{StaticResource Text}" Width="75" Margin="0,0,164,8" />
                            <ComboBox Style="{StaticResource ModernRoundedComboBoxStyle}" Width="233" HorizontalAlignment="Left" 
                 ItemsSource="{Binding Reasons}" SelectedItem="{Binding SelectedReason, UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBox Style="{StaticResource BigTextBoxStyle}" Tag="Описание жалобы" 
                Text="{Binding ReportText, UpdateSourceTrigger=PropertyChanged}"/>
                            <StackPanel Orientation="Horizontal">
                                <Button Content="Отправить" Style="{StaticResource ReportButton}" Width="187" Command="{Binding SendReport}"/>
                                <Button Content="х" Style="{StaticResource ReportButton}" Width="41" Command="{Binding ReturnUsersButtons}"/>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>









                </Grid>
            </DockPanel>
        </Grid>
    </Border>
</Window>
