<Window x:Class="wpfHUSH.View.NotificationCenterWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:wpfHUSH.View"
        mc:Ignorable="d"
        Title="NotificationCenterWindow" WindowStyle="None" AllowsTransparency="True" Background="Transparent" Height="340" Width="300" MaxHeight="500" MinHeight="340" MaxWidth="300" MinWidth="300" WindowStartupLocation="Manual" Left="100" Top="200" Icon="/Pictures/Logo.ico" RenderOptions.BitmapScalingMode="HighQuality">
    <Window.Resources>
        <Style x:Key="ModernContextMenu" TargetType="{x:Type ContextMenu}">
            <Setter Property="Background" Value="#FFF8F8F8"/>
            <Setter Property="BorderBrush" Value="#FFE0E0E0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="Foreground" Value="#FF333333"/>
            <Setter Property="FontFamily" Value="Arial Black"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6"
                            Padding="{TemplateBinding Padding}">
                            <StackPanel IsItemsHost="True"
                                    ClipToBounds="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#FFD0D0D0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Стиль для MenuItem внутри ContextMenu -->
        <Style x:Key="ModernMenuItem" TargetType="{x:Type MenuItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="8,6,8,6"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                

                                <!-- Текст -->
                                <ContentPresenter x:Name="HeaderHost"
                                            Grid.Column="1"
                                            Content="{TemplateBinding Header}"
                                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                                            RecognizesAccessKey="True"
                                            VerticalAlignment="Center"/>

                                <!-- Стрелка для подменю -->
                                <Path x:Name="SubmenuArrow"
                                  Grid.Column="2"
                                  Data="M0,0 L4,4 8,0 Z"
                                  Fill="{TemplateBinding Foreground}"
                                  Margin="8,0,0,0"
                                  VerticalAlignment="Center"
                                  Visibility="Collapsed"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Анимация при наведении -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#FFE8E8E8"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="Border"
                                                       Storyboard.TargetProperty="Background.Color"
                                                       To="#FFE8E8E8"
                                                       Duration="0:0:0.15"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="Border"
                                                       Storyboard.TargetProperty="Background.Color"
                                                       To="Transparent"
                                                       Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                           
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CustomScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <!-- Основное содержимое -->
                            <ScrollContentPresenter Grid.Column="0"/>

                            <!-- Вертикальная полоса прокрутки -->
                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Grid.Column="1"
                                   Width="8"
                                   Orientation="Vertical"
                                   Cursor="Arrow"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}">
                                <ScrollBar.Style>
                                    <Style TargetType="{x:Type ScrollBar}">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                    <Grid>
                                                        <Track x:Name="PART_Track" 
                                                           IsDirectionReversed="True">
                                                            <Track.Thumb>
                                                                <Thumb x:Name="Thumb"
                                                                   Background="#FF565656"
                                                                   Opacity="0.3">
                                                                    <Thumb.Style>
                                                                        <Style TargetType="{x:Type Thumb}">
                                                                            <Setter Property="Width" Value="8"/>
                                                                            <Setter Property="MinHeight" Value="30"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                        <Border 
                                                                                        CornerRadius="4" 
                                                                                        Background="{TemplateBinding Background}"
                                                                                        Opacity="{TemplateBinding Opacity}">
                                                                                            <Border.Triggers>
                                                                                                <EventTrigger RoutedEvent="MouseEnter">
                                                                                                    <BeginStoryboard>
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                                                                         To="0.7"
                                                                                                                         Duration="0:0:0.2"/>
                                                                                                            <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                                                                                                        To="#FF666666"
                                                                                                                        Duration="0:0:0.2"/>
                                                                                                        </Storyboard>
                                                                                                    </BeginStoryboard>
                                                                                                </EventTrigger>
                                                                                                <EventTrigger RoutedEvent="MouseLeave">
                                                                                                    <BeginStoryboard>
                                                                                                        <Storyboard>
                                                                                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                                                                         To="0.3"
                                                                                                                         Duration="0:0:0.5"/>
                                                                                                            <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                                                                                                        To="#FF565656"
                                                                                                                        Duration="0:0:0.5"/>
                                                                                                        </Storyboard>
                                                                                                    </BeginStoryboard>
                                                                                                </EventTrigger>
                                                                                            </Border.Triggers>
                                                                                        </Border>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </Thumb.Style>
                                                                </Thumb>
                                                            </Track.Thumb>
                                                        </Track>
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ScrollBar.Style>
                            </ScrollBar>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LabelText" TargetType="Label">
            <Setter Property="FontFamily" Value="Arial Black"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Margin" Value="0,6,0,0"/>
        </Style>
        <Style x:Key="RoundedButton" TargetType="Button">
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="12"/>
            <Setter Property="Margin" Value="0,2,0,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border 
     x:Name="border"
     Background="{TemplateBinding Background}"
     BorderBrush="{TemplateBinding BorderBrush}"
     BorderThickness="{TemplateBinding BorderThickness}"
     CornerRadius="16">
                            <ContentPresenter 
         HorizontalAlignment="Center"
         VerticalAlignment="Center"
         TextBlock.FontFamily="{TemplateBinding FontFamily}"
         TextBlock.FontSize="{TemplateBinding FontSize}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FFABAAAA"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="{x:Null}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Style  TargetType="ListView">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontFamily" Value="Arial Black"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Padding" Value="2"/>
        </Style>
        <Style TargetType="ListViewItem">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="0 0 0 6"/>
            <Setter Property="Margin" Value="0 6 0 0"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Border Name="Border" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#FFBBB8B8"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#FFBBB8B8"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="#FFBBB8B8"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="WindowButton" TargetType="Button">
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Background" Value="#FF2D2D30"/>
            <!-- Явно задаем начальный цвет -->
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                 BorderBrush="{TemplateBinding BorderBrush}"
                 BorderThickness="{TemplateBinding BorderThickness}"
                 CornerRadius="3"
                 RenderTransformOrigin="0.5,0.5">
                            <Border.Background>
                                <!-- Явно определяем SolidColorBrush -->
                                <SolidColorBrush Color="#FF2D2D30"/>
                            </Border.Background>
                            <Border.RenderTransform>
                                <ScaleTransform x:Name="scaleTransform" ScaleX="1" ScaleY="1"/>
                            </Border.RenderTransform>
                            <ContentPresenter HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              TextBlock.FontFamily="{TemplateBinding FontFamily}"
                              TextBlock.FontSize="{TemplateBinding FontSize}"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <!-- Анимация при наведении -->
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="#FF333337"
                                        Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                        To="1.01"
                                        Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                        To="1.01"
                                        Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <!-- Анимация при уходе курсора -->
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="#FF2D2D30"
                                        Duration="0:0:0.3"/>
                                        <DoubleAnimation Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                        To="1"
                                        Duration="0:0:0.3"/>
                                        <DoubleAnimation Storyboard.TargetName="border"
                                        Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                        To="1"
                                        Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <!-- Эффект при нажатии -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0.99" ScaleY="0.99"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="WindowButtonClose" TargetType="Button">
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Background" Value="#FF2D2D30"/>
            <!-- Явно задаем начальный цвет -->
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
        BorderBrush="{TemplateBinding BorderBrush}"
        BorderThickness="{TemplateBinding BorderThickness}"
        CornerRadius="3,9,3,3"
        RenderTransformOrigin="0.5,0.5">
                            <Border.Background>
                                <!-- Явно определяем SolidColorBrush -->
                                <SolidColorBrush Color="#FF2D2D30"/>
                            </Border.Background>
                            <Border.RenderTransform>
                                <ScaleTransform x:Name="scaleTransform" ScaleX="1" ScaleY="1"/>
                            </Border.RenderTransform>
                            <ContentPresenter HorizontalAlignment="Center"
                     VerticalAlignment="Center"
                     TextBlock.FontFamily="{TemplateBinding FontFamily}"
                     TextBlock.FontSize="{TemplateBinding FontSize}"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <!-- Анимация при наведении -->
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border"
                               Storyboard.TargetProperty="Background.Color"
                               To="#FF333337"
                               Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="border"
                               Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                               To="1.01"
                               Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="border"
                               Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                               To="1.01"
                               Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <!-- Анимация при уходе курсора -->
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border"
                               Storyboard.TargetProperty="Background.Color"
                               To="#FF2D2D30"
                               Duration="0:0:0.3"/>
                                        <DoubleAnimation Storyboard.TargetName="border"
                               Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                               To="1"
                               Duration="0:0:0.3"/>
                                        <DoubleAnimation Storyboard.TargetName="border"
                               Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                               To="1"
                               Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <!-- Эффект при нажатии -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0.99" ScaleY="0.99"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="ListViewItemStyle" TargetType="ListViewItem">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="0 0 0 1"/>
            <Setter Property="Margin" Value="0 6 0 0"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Border 
                        Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Плавная анимация при наведении -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation 
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Background.Color"
                                            To="#FFF0F0F0"
                                            Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation 
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Background.Color"
                                            To="White"
                                            Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>

                            <!-- Выделение (без анимации для четкости) -->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#FF8C8C8C"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="#FF676767"/>
                            </Trigger>

                            
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RoundedButton2" TargetType="Button">
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
    Background="{TemplateBinding Background}"
    BorderBrush="{TemplateBinding BorderBrush}"
    BorderThickness="{TemplateBinding BorderThickness}"
    CornerRadius="0"
    RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform x:Name="scaleTransform" ScaleX="1" ScaleY="1"/>
                            </Border.RenderTransform>
                            <ContentPresenter HorizontalAlignment="Center"
                 VerticalAlignment="Center"
                 TextBlock.FontFamily="{TemplateBinding FontFamily}"
                 TextBlock.FontSize="{TemplateBinding FontSize}"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <!-- Анимация при наведении -->
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border"
                            Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                            To="#F0F0F0"
                            Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="border"
                            Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                            To="1.02"
                            Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="border"
                            Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                            To="1.02"
                            Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <!-- Анимация при уходе курсора -->
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border"
                            Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                            To="#FFBBBBBB"
                            Duration="0:0:0.3"/>
                                        <DoubleAnimation Storyboard.TargetName="border"
                            Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                            To="1"
                            Duration="0:0:0.3"/>
                                        <DoubleAnimation Storyboard.TargetName="border"
                            Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                            To="1"
                            Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <!-- Эффект при нажатии -->
                            <Trigger Property="IsPressed" Value="True">

                                <Setter TargetName="border" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0.99" ScaleY="0.99"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Border CornerRadius="10" Background="White" ClipToBounds="True">
        <Grid>
            <DockPanel>
                <Border DockPanel.Dock="Top" Height="30" RenderOptions.BitmapScalingMode="HighQuality" CornerRadius="8,8,0,0" Background="#FF2D2D30" MouseLeftButtonDown="TitleBar_MouseLeftButtonDown">
                    <Grid>
                        <TextBlock Text="" 
     VerticalAlignment="Center" 
     HorizontalAlignment="Center"
     Margin="10,0,0,0"
     Foreground="White"/>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                            <Button Content="_" Style="{StaticResource WindowButton}" Width="40" Background="Transparent" 
      Foreground="White" BorderThickness="0" Click="MinimizeButton_Click"/>
                            <Button Content="X" Width="40" Background="Transparent" 
      Foreground="White" BorderThickness="0" Click="CloseButton_Click" Style="{StaticResource WindowButtonClose}"
      />
                        </StackPanel>
                    </Grid>
                </Border>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <StackPanel Grid.Row="0" Orientation="Horizontal">
                        <Image Source="/Pictures/Notification.png" Height="52" Width="38" VerticalAlignment="Top" RenderOptions.BitmapScalingMode="HighQuality" 
       RenderOptions.EdgeMode="Aliased" Margin="7"/>
                        <Label Content="Центр" Style="{StaticResource LabelText}" Height="30" VerticalAlignment="Top" />
                    </StackPanel>

                    <StackPanel Grid.Row="0" Orientation="Horizontal">
                        <Label Content="уведомлений" Style="{StaticResource LabelText}" Height="30" VerticalAlignment="Top" Margin="53,25,0,0" />
                    </StackPanel>

                    <StackPanel Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,15,3">
                        <Button Height="35" Width="35" Style="{StaticResource RoundedButton2}" Command="{Binding DeleteNotificationCommand}">
                            <Button.Background>
                                <ImageBrush ImageSource="/Pictures/trashwithoutback.png"/>
                            </Button.Background>
                        </Button>

                    </StackPanel>


                    <Grid Grid.Row="2">
                        <Border BorderBrush="LightGray" BorderThickness="1" CornerRadius="5">
                            <ScrollViewer HorizontalScrollBarVisibility="Hidden" Style="{StaticResource CustomScrollViewerStyle}">
                                <ListView x:Name="NotificationsListView" 
   ItemsSource="{Binding Notifications}" 
   SelectedItem="{Binding SelectedItem}" 
   MouseDoubleClick="DoubleClickList"
   Padding="0" ItemContainerStyle="{StaticResource ListViewItemStyle}">



                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <Border BorderBrush="LightGray" BorderThickness="0,0,0,1" Padding="5">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>

                                                    <Image Source="{Binding Swiper.Photo}" Stretch="UniformToFill" Width="35" Height="35" Margin="0,2,5,0">
                                                        <Image.Clip>
                                                            <RectangleGeometry Rect="0,0,33,33" RadiusX="10" RadiusY="10"/>
                                                        </Image.Clip>
                                                    </Image>

                                                    <StackPanel Grid.Column="1">
                                                        <TextBlock Text="{Binding Message}" FontWeight="Bold" TextWrapping="Wrap"/>
                                                        <TextBlock TextWrapping="Wrap">
                         <Run Text="{Binding Swiper.Name}"/>
                         <Run Text=", "/>
                         <Run Text="{Binding Swiper.Age}"/>
                         <Run Text=", "/>
                         <Run Text="{Binding Swiper.City}"/>
                                                        </TextBlock>
                                                        <Ellipse Width="10" Height="10" Fill="Red" HorizontalAlignment="Right"
                          Visibility="{Binding IsNew, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                                    </StackPanel>
                                                </Grid>
                                            </Border>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </Grid>
            </DockPanel>
        </Grid>
    </Border>
</Window>
