<Window x:Class="wpfHUSH.View.SearchWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:wpfHUSH.View"
        mc:Ignorable="d"
        Title="SearchWindow"  Height="480" Width="850" MaxHeight="480" MaxWidth="850" MinWidth="850" MinHeight="480" WindowStartupLocation="CenterScreen" Icon="/Pictures/Logo.ico" RenderOptions.BitmapScalingMode="HighQuality"> 
    <Window.Resources>
        <ControlTemplate x:Key="CleanToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
            <Border Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="0,18,18,0">
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#F0F0F0"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Storyboard x:Key="SlideOutToLeft">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-800"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="SlideInFromRight">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="800"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="SlideOutToRight">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="800"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="SlideInFromLeft">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-800"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="FadeInAnimation">
            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                            From="0" To="1" Duration="0:0:0.5"/>
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                            From="0.5" To="1" Duration="0:0:0.5"/>
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                            From="0.5" To="1" Duration="0:0:0.5"/>
        </Storyboard>
        <Style x:Key="TextNickname" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Arial Black"/>
            <Setter Property="Height" Value="12"/>
        </Style>
        <Style x:Key="RoundedButton" TargetType="Button">
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="4,0,10,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="0"
            RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform x:Name="scaleTransform" ScaleX="1" ScaleY="1"/>
                            </Border.RenderTransform>
                            <ContentPresenter HorizontalAlignment="Center"
                         VerticalAlignment="Center"
                         TextBlock.FontFamily="{TemplateBinding FontFamily}"
                         TextBlock.FontSize="{TemplateBinding FontSize}"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <!-- Анимация при наведении -->
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border"
                                    Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                    To="#F0F0F0"
                                    Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="border"
                                    Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                    To="1.07"
                                    Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="border"
                                    Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                    To="1.07"
                                    Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <!-- Анимация при уходе курсора -->
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border"
                                    Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                    To="#FFBBBBBB"
                                    Duration="0:0:0.3"/>
                                        <DoubleAnimation Storyboard.TargetName="border"
                                    Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                    To="1"
                                    Duration="0:0:0.3"/>
                                        <DoubleAnimation Storyboard.TargetName="border"
                                    Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                    To="1"
                                    Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <!-- Эффект при нажатии -->
                            <Trigger Property="IsPressed" Value="True">
                                
                                <Setter TargetName="border" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0.97" ScaleY="0.97"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="UserButton" TargetType="Button">
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="12"/>
            <Setter Property="Width" Value="55"/>
            <Setter Property="Height" Value="55"/>
            <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality"/>
            <Setter Property="RenderOptions.EdgeMode" Value="Aliased"/>
            <Setter Property="Margin" Value="5,5,15,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border 
                    x:Name="border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="16">
                            <ContentPresenter 
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        TextBlock.FontFamily="{TemplateBinding FontFamily}"
                        TextBlock.FontSize="{TemplateBinding FontSize}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FFCECECE"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="{x:Null}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#E0E0E0"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="{x:Null}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="Text" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Arial Black"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Margin" Value="0,135,65,5"/>
        </Style>

        <Style x:Key="ModernRoundedComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="36"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Margin" Value="3,0,0,7"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <!-- Основной контейнер -->
                            <Border x:Name="Border" 
                            CornerRadius="18" 
                            Background="{x:Null}" 
                            BorderBrush="Black" 
                            BorderThickness="1.5"
                            Padding="0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="32"/>
                                    </Grid.ColumnDefinitions>

                                    <!-- Контент и текстовое поле -->
                                    <Grid Margin="12,0,0,0">
                                        <ContentPresenter x:Name="ContentSite"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left"/>

                                        <TextBox x:Name="PART_EditableTextBox"
                                     Style="{x:Null}"
                                     VerticalAlignment="Center"
                                     Focusable="True"
                                     Background="Transparent"
                                     Visibility="Hidden"
                                     IsReadOnly="{TemplateBinding IsReadOnly}"/>

                                        <TextBlock x:Name="PlaceholderText"
                                       Text="Причина жалобы"
                                       FontFamily="Arial Black"
                                       FontSize="{TemplateBinding FontSize}"
                                       Margin="0,0,0,0"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Left"
                                       Foreground="LightGray"
                                       Opacity="0"/>
                                    </Grid>

                                    <!-- Кнопка раскрытия -->
                                    <ToggleButton x:Name="ToggleButton"
                                      Grid.Column="1"
                                      Focusable="False"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press" 
                                      Background="{x:Null}" 
                                      BorderBrush="Transparent"
                                      Padding="0,0,8,0"
                                      Template="{StaticResource CleanToggleButtonTemplate}">
                                        <Path x:Name="Arrow"
                                  Fill="Black"
                                  Data="M0,0 L4,4 8,0 Z"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                              
                                  RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <RotateTransform Angle="0"/>
                                            </Path.RenderTransform>
                                        </Path>
                                    </ToggleButton>
                                </Grid>
                            </Border>

                            <!-- Выпадающий список -->
                            <Popup x:Name="Popup"
                           Placement="Bottom"
                           Focusable="False"
                           AllowsTransparency="True"
                           IsOpen="{TemplateBinding IsDropDownOpen}"
                           PopupAnimation="Fade">
                                <Border x:Name="DropDownBorder"
                            CornerRadius="12"
                            Background="#FFFFFF"
                            BorderBrush="Black"
                            BorderThickness="2"
                            MinWidth="{TemplateBinding ActualWidth}"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                            Margin="0,4,0,0">
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="12" 
                                              ShadowDepth="0" 
                                              Color="#20000000" 
                                              Opacity="0.3"/>
                                    </Border.Effect>
                                    <ScrollViewer>
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <!-- Эффекты при наведении -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="Black"/>
                            </Trigger>

                            <!-- Эффекты при открытии -->
                            <Trigger Property="IsDropDownOpen" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="Black"/>
                                <Setter TargetName="Border" Property="CornerRadius" Value="18,18,0,0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,0,0,0"/>
                                <Setter TargetName="Arrow" Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="180"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>

                            <!-- Эффекты для disabled состояния -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="Black"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="Black"/>
                                <Setter Property="Foreground" Value="#AAAAAA"/>
                                <Setter TargetName="Arrow" Property="Fill" Value="#CCCCCC"/>
                            </Trigger>

                            <!-- Плейсхолдер для пустого значения -->
                            <Trigger Property="Text" Value="">
                                <Setter TargetName="PlaceholderText" Property="Opacity" Value="1"/>
                            </Trigger>

                            <Trigger Property="Text" Value="{x:Null}">
                                <Setter TargetName="PlaceholderText" Property="Opacity" Value="1"/>
                            </Trigger>

                            <!-- Анимации для плейсхолдера -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Border"
                                       Storyboard.TargetProperty="BorderBrush.Opacity"
                                       To="0.8" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Border"
                                       Storyboard.TargetProperty="BorderBrush.Opacity"
                                       To="0.5" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>

                            <!-- Плавное появление/исчезание плейсхолдера -->
                            <Trigger Property="Text" Value="">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="PlaceholderText"
                                       Storyboard.TargetProperty="Opacity"
                                       From="0" To="1" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="PlaceholderText"
                                       Storyboard.TargetProperty="Opacity"
                                       From="1" To="0" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <!-- Стиль для элементов в выпадающем списке -->
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ComboBoxItem}">
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                    <Border x:Name="ItemBorder" 
                                    CornerRadius="6"
                                    Background="Transparent" 
                                    BorderThickness="0"
                                    Padding="12,6,12,6"
                                    Margin="4,2,4,2">
                                        <ContentPresenter />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="ItemBorder" Property="Background" Value="#F0F0F0"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="ItemBorder" Property="Background" Value="#E0E0E0"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="BigTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="Height" Value="62"/>
            <Setter Property="Width" Value="232"/>
            <Setter Property="Margin" Value="3,0,0,0"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border x:Name="border" 
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="16"
                    SnapsToDevicePixels="True">
                                <Grid Margin="{TemplateBinding Padding}">
                                    <!-- Watermark -->
                                    <TextBlock x:Name="watermark"
                               Text="{TemplateBinding Tag}"
                               Foreground="LightGray"
                               Opacity="1"
                               FontFamily="Arial Black"
                               VerticalAlignment="Top" 
                               Margin="5,3,5,0"
                               FontSize="10" 
                               FontWeight="Bold"/>

                                    <ScrollViewer x:Name="PART_ContentHost"/>
                                </Grid>
                            </Border>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <!-- Главный триггер - управляет видимостью watermark -->
                            <Trigger Property="Text" Value="">
                                <Setter TargetName="watermark" Property="Opacity" Value="1"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="watermark"
                                           Storyboard.TargetProperty="Opacity"
                                           From="0" To="1" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="watermark"
                                           Storyboard.TargetProperty="Opacity"
                                           From="1" To="0" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>

                            <!-- Дополнительный триггер для null значений -->
                            <Trigger Property="Text" Value="{x:Null}">
                                <Setter TargetName="watermark" Property="Opacity" Value="1"/>
                            </Trigger>

                            <!-- Триггер на наведение - скрывает watermark только если поле пустое -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="Text" Value=""/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="watermark" Property="Opacity" Value="0"/>
                            </MultiTrigger>

                            <!-- Стили для рамки -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#555555"/>
                                <Setter TargetName="watermark" Property="Opacity" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#555555"/>
                                <Setter TargetName="watermark" Property="Opacity" Value="0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ReportButton" TargetType="Button">
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="12"/>
            <Setter Property="FontFamily" Value="Arial Black"/>
            <Setter Property="Height" Value="26"/>
            <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality"/>
            <Setter Property="RenderOptions.EdgeMode" Value="Aliased"/>
            <Setter Property="Margin" Value="3,8,0,0"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border 
x:Name="border"
Background="{TemplateBinding Background}"
BorderBrush="{TemplateBinding BorderBrush}"
BorderThickness="{TemplateBinding BorderThickness}"
CornerRadius="10">
                            <ContentPresenter 
    HorizontalAlignment="Center"
    VerticalAlignment="Center"
    TextBlock.FontFamily="{TemplateBinding FontFamily}"
    TextBlock.FontSize="{TemplateBinding FontSize}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FFCECECE"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="{x:Null}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#E0E0E0"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="{x:Null}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LabelText" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Arial Black"/>
            <Setter Property="FontSize" Value="25"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
        </Style>
        <Style x:Key="TextLocation" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Arial Black"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Margin" Value="5,3,0,0"/>
        </Style>
        <Style x:Key="TextDescription" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Arial Black"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Margin" Value="6,70,0,0"/>
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="Width" Value="332"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="37*"/>
            <ColumnDefinition Width="53*"/>
            <ColumnDefinition Width="35*"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="8*"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Left">
            <Image Source="/Pictures/Group 18.png" Height="37" Width="180" RenderOptions.BitmapScalingMode="HighQuality" 
RenderOptions.EdgeMode="Aliased" Margin="0,7,0,0"/>
        </StackPanel>

        <StackPanel Grid.Row="0" Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right">
            <Image Source="{Binding User.Photo}" Stretch="UniformToFill" Width="34" Height="34" Margin="0,2,5,0">
                <Image.Clip>
                    <RectangleGeometry Rect="0,0,32,32" RadiusX="12" RadiusY="12"/>
                </Image.Clip>
            </Image>
            <TextBlock Text="{Binding User.Name}" Style="{StaticResource TextNickname}"/>
            <Button BorderBrush="{x:Null}" Width="16" Height="16" Style="{StaticResource RoundedButton}" Command="{Binding OpenEditWindow}">
                <Button.Background>
                    <ImageBrush ImageSource="/Pictures/ic_baseline-create.png" RenderOptions.BitmapScalingMode="HighQuality" 
RenderOptions.EdgeMode="Aliased"/>
                </Button.Background>
            </Button>
        </StackPanel>



        <StackPanel Grid.Row="1" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center">
            <Button Style="{StaticResource UserButton}" Command="{Binding LikeCommand}">
                <Button.Background>
                    <ImageBrush ImageSource="/Pictures/Like.png"/>
                </Button.Background>
            </Button>
            <Button Style="{StaticResource UserButton}" Command="{Binding DislikeCommand}">
                <Button.Background>
                    <ImageBrush ImageSource="/Pictures/Dislike.png"/>
                </Button.Background>
            </Button>
            <Button Style="{StaticResource UserButton}" Command="{Binding ReportVisible}">
                <Button.Background>
                    <ImageBrush ImageSource="/Pictures/Report.png"/>
                </Button.Background>
            </Button>
        </StackPanel>

        <StackPanel Grid.Row="2" Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Bottom" Height="46" Width="45">
            <Button Height="35" Width="30" Style="{StaticResource RoundedButton}" Command="{Binding OpenNotificationWindow}" Margin="4,5,10,10">
                <Button.Background>
                    <ImageBrush ImageSource="/Pictures/Notification.png"/>
                </Button.Background>
            </Button>
        </StackPanel>

        <StackPanel Grid.RowSpan="3" Grid.Column="0" Visibility="{Binding ReportWindowVisible}" Margin="10,0,0,0">
            <TextBlock Text="Жалоба" Style="{StaticResource Text}" Width="75" />
            <ComboBox Style="{StaticResource ModernRoundedComboBoxStyle}" Width="160" HorizontalAlignment="Left" ItemsSource="{Binding Reasons}" DisplayMemberPath="Type" SelectedItem="{Binding SelectedReason}"/>
            <TextBox Style="{StaticResource BigTextBoxStyle}" Tag="Описание жалобы" Width="160" Text="{Binding ReportText}"/>
            <StackPanel Orientation="Horizontal">
                <Button Content="Отправить" Style="{StaticResource ReportButton}" Width="118" Height="26" Command="{Binding SendReport}"/>
                <Button Content="х" Style="{StaticResource ReportButton}" Width="34" Command="{Binding ReportHidden}" Height="26"/>
            </StackPanel>
        </StackPanel>

        <StackPanel Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="{Binding AreOver}">
            <TextBlock Text="Анкет больше нет..." Style="{StaticResource LabelText}" />
        </StackPanel>

        <StackPanel Grid.Row="1" Grid.Column="1" x:Name="ProfileContainer">
            <Border x:Name="ProfileBorder" RenderTransformOrigin="0.5,0.5">
                <Border.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Border.RenderTransform>
                <Image Source="{Binding CurrentProfile.Photo}" Stretch="UniformToFill" Height="353">
                    <Image.Clip>
                        <RectangleGeometry Rect="0,0,340,340" RadiusX="14" RadiusY="14"/>
                    </Image.Clip>
                </Image>
            </Border>
        </StackPanel>

        <StackPanel Grid.Row="1" Grid.Column="2">
            <StackPanel Orientation="Horizontal" Margin="0,5,0,0" >
                <TextBlock Text="{Binding CurrentProfile.Name}" Style="{StaticResource LabelText}"/>
                <TextBlock Text="," Style="{StaticResource LabelText}" Height="28" Width="8" Visibility="{Binding HiddenLocationAndPhoto}" Margin="0,0,4,0"/>
                <TextBlock Text="{Binding CurrentProfile.Age}" Style="{StaticResource LabelText}"/>
                <Image Source="{Binding CurrentProfile.GenderIcon}" RenderOptions.BitmapScalingMode="HighQuality" 
RenderOptions.EdgeMode="Aliased" Height="23" Width="29"/>
            </StackPanel>
            <StackPanel Grid.Row="1" Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Top" Visibility="{Binding HiddenLocationAndPhoto}" Margin="0,6,0,0" >
                <Image Source="/Pictures/Loci.png" RenderOptions.BitmapScalingMode="HighQuality" 
RenderOptions.EdgeMode="Aliased" Height="23" Width="16"/>
                <TextBlock Text="{Binding CurrentProfile.City}" Height="23" Style="{StaticResource TextLocation}"/>
            </StackPanel>
        </StackPanel>

        <StackPanel Grid.Row="1" Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Top">
            <TextBlock Text="{Binding CurrentProfile.About}" Style="{StaticResource TextDescription}" Width="211" Margin="3,70,0,0" />
        </StackPanel>

    </Grid>

</Window>